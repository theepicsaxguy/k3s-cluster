{
    "folders": [
        {
            "path": ".",
            "name": "root"
        },
        {
            "path": "roles",
            "name": "roles"
        },
        {
            "path": "inventory",
            "name": "inventory"
        },
        {
            "path": "collections",
            "name": "collections"
        },
        {
            "path": "docs",
            "name": "documentation"
        }
    ],
    "settings": {
        "editor.formatOnSave": true,
        "editor.tabSize": 2,
        // YAML Linting
        "yaml.schemas": {
            "https://json.schemastore.org/ansible-playbook.json": [
                "/playbooks/*.yaml",
                "/roles/**/*.yaml"
            ]
        },
        "files.associations": {
            "*.yaml": "yaml",
            "*.yml": "yaml",
            "ansible.cfg": "ini"
        },
        // Auto-lint YAML and Python
        "ansible.python.interpreterPath": "/usr/bin/python3",
        "python.linting.enabled": true,
        "python.linting.flake8Enabled": true,
        "ansible.lint.path": "~/.local/bin/ansible-lint",
        "ansible.lint.enabled": true,
        "ansible.lint.rules": "all", // Terminal Defaults to WSL
        "terminal.integrated.defaultProfile.windows": "WSL",
        "files.autoSave": "afterDelay",
        "ansible.executionEnvironment.enabled": false,
        "ansible.lightspeed.enabled": false,
        "git.autofetch": true,
        "git.autoStash": true,
        "github.copilot.chat.commitMessageGeneration.instructions": [
            {
                "text": "Generate a commit message strictly following the Conventional Commits format."
            },
            {
                "text": "Use one of the following prefixes: feat:, fix:, chore:, docs:, style:, refactor:, perf:, test:, ci:, build:, revert:."
            },
            {
                "text": "If the commit affects a specific module, feature, or component, include a scope in parentheses after the type, e.g., 'feat(auth):'."
            },
            {
                "text": "The first line should be concise (max 50 characters), in present tense, imperative mood, and without punctuation at the end."
            },
            {
                "text": "Use present tense and imperative mood, e.g., 'Add authentication', not 'Added' or 'Adds'."
            },
            {
                "text": "Include a detailed description in the commit body, explaining what changed, why, and how, with a maximum line length of 72 characters."
            },
            {
                "text": "If breaking changes exist, include 'BREAKING CHANGE:' in the commit footer, with a detailed explanation."
            },
            {
                "text": "If applicable, reference related issues using 'Fixes: #<issue_number>', 'Closes: #<issue_number>', or 'Related: #<issue_number>'."
            }
        ]
    },
    "launch": {
        "version": "0.2.0",
        "configurations": [
            {
                "name": "Debug Ansible Playbook",
                "type": "debugpy",
                "request": "launch",
                "program": "/usr/bin/ansible-playbook",
                "args": [
                    "${workspaceFolder}/playbooks/provisioning.yaml",
                    "-vvv"
                ],
                "console": "integratedTerminal",
                "env": {
                    "ANSIBLE_STDOUT_CALLBACK": "debug"
                }
            },
            {
                "name": "Debug Python Module",
                "type": "debugpy",
                "request": "launch",
                "program": "${file}",
                "console": "integratedTerminal"
            }
        ]
    },
    "tasks": {
        "version": "2.0.0",
        "tasks": [
            {
                "label": "Run Provisioning Playbook",
                "type": "shell",
                "command": "wsl ansible-playbook playbooks/provisioning.yaml",
                "problemMatcher": []
            },
            {
                "label": "Run Playbook in Debug Mode",
                "type": "shell",
                "command": "wsl ansible-playbook playbooks/provisioning.yaml -vvv",
                "problemMatcher": []
            },
            {
                "label": "Lint Playbooks",
                "type": "shell",
                "command": "wsl ansible-lint playbooks/*.yaml",
                "problemMatcher": []
            },
            {
                "label": "Validate Inventory",
                "type": "shell",
                "command": "wsl ansible-inventory --list",
                "problemMatcher": []
            }
        ]
    }
}