configuration:
  concurrency: {{ kured_vars.kubernetes.configuration.concurrency }}
  period: {{ kured_vars.kubernetes.configuration.period }}
  rebootDelay: {{ kured_vars.kubernetes.configuration.reboot_delay }}
{% if kured_vars.kubernetes.configuration.slack.enabled is truthy %}
{% if kured_vars.kubernetes.configuration.slack.messages.enabled is truthy %}
  messageTemplateDrain: {{ kured_vars.kubernetes.configuration.slack.messages.drain }}
  messageTemplateReboot: {{ kured_vars.kubernetes.configuration.slack.messages.reboot }}
  messageTemplateUncordon: {{ kured_vars.kubernetes.configuration.slack.messages.uncordon }}
{% endif %}
  notifyUrl: {{ global_map.credentials.kured.slack.notify.url }}
{% endif %}
  startTime: {{ kured_vars.kubernetes.configuration.time.start }}
  endTime: {{ kured_vars.kubernetes.configuration.time.end }}
  timeZone: {{ kured_vars.kubernetes.configuration.time.zone }}
{% if kured_postinstall is truthy and kured_map.metrics.service.monitor.enabled is truthy %}
metrics:
  create: true
{% if kured_map.metrics.service.monitor.scrape.interval is falsy %}
  interval: {{ victoriametrics_map.service.monitor.scrape.interval }}
{% else %}
  interval: {{ kured_map.metrics.service.monitor.scrape.interval }}
{% endif %}
  labels:
    release: {{ victoriametrics_vars.kubernetes.helm.chart.alias }}
  namespace: {{ victoriametrics_vars.kubernetes.namespace }}
{% if kured_map.metrics.service.monitor.scrape.timeout is falsy %}
  scrapeTimeout: {{ victoriametrics_map.service.monitor.scrape.timeout }}
{% else %}
  scrapeTimeout: {{ kured_map.metrics.service.monitor.scrape.timeout }}
{% endif %}
service:
  annotations:
{% for key, value in kured_map.metrics.service.annotations.items() %}
    {{ key | indent(4) }}: {{ value }}
{% endfor %}
  create: true
  name: {{ kured_vars.kubernetes.helm.chart.name }}
{% endif %}
resources:
  limits:
{% if kured_vars.kubernetes.resources.limits.cpu is truthy %}
    cpu: {{ kured_vars.kubernetes.resources.limits.cpu }}
{% endif %}
    memory: {{ kured_vars.kubernetes.resources.limits.memory }}
  requests:
    cpu: {{ kured_vars.kubernetes.resources.requests.cpu }}
    memory: {{ kured_vars.kubernetes.resources.requests.memory }}
{% if k3s_vars.cluster.controlplane.tainted is truthy and k3s_project.cluster.tolerations | length > 0 %}
tolerations:
  {{ k3s_project.cluster.tolerations | to_nice_yaml(indent=2) | indent(2) }}
{% endif %}
